import Head from "next/head";
import { GetServerSideProps } from "next";
import data from "../data";
import { sanity } from "../lib";
import dynamic from "next/dynamic";

const { client } = sanity;
const { query } = data;

const About = dynamic(() => import("../layouts/about/views/About"));
const Contact = dynamic(() => import("../layouts/contact/views/Contact"));
const Header = dynamic(() => import("../layouts/header/views/Header"));
const Navbar = dynamic(() => import("../layouts/navbar/views/Navbar"));
const Skills = dynamic(() => import("../layouts/skills/views/Skills"));
const Work = dynamic(() => import("../layouts/work/views/Work"));

export interface IProps {
  abouts: { status: string; value: SanityDoc.Abouts[] };
  works: { status: string; value: SanityDoc.Works[] };
  skills: { status: string; value: SanityDoc.Skills[] };
}

const Home = ({ abouts, works, skills }: IProps) => {

  return (
    <div className={"w-full h-full bg-primary scroll-smooth"}>
      <Head>
        <title>HAMJAH</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
      </Head>

      <Navbar />
      <main className={"w-full h-full"}>
        <Header />
        <About data={abouts.value} />
        <Work data={works.value} />
        <Skills data={skills.value} />
      </main>
      <Contact />
    </div>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async () => {
  try {
    const [abouts, works, skills] = await Promise.allSettled([
      client(process.env.SANITY_TOKEN)
        .fetch(query.sanity.abouts)
        .then((res) => JSON.parse(JSON.stringify(res))),
      client(process.env.SANITY_TOKEN)
        .fetch(query.sanity.works)
        .then((res) => JSON.parse(JSON.stringify(res))),
      client(process.env.SANITY_TOKEN)
        .fetch(query.sanity.skills)
        .then((res) => JSON.parse(JSON.stringify(res))),
    ]);
    return { props: { abouts, works, skills } };
  } catch (error) {
    console.error("SSR error!");
    console.error(JSON.stringify(error));
    return { props: {} };
  }
};
